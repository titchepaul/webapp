#pour employeeProxy dans le repository
RestTemplate permet d’exécuter une requête HTTP. On a donc besoin de fournir l’URL, le type de requête (GET, POST, etc.),
 et pour finir le type d’objet qui sera retourné.

Ce dernier point est très important, RestTemplate non seulement fait la requête à l’API mais en plus convertit le résultat JSON
 en objet Java et ça, c’est top pour nous !

grâce à notre objet CustomProperties, on récupère l’URL de l’API.
 on complète l’URL de l’API par le path de l'endpoint à joindre.
 on instancie notre objet RestTemplate
 on appelle la méthode exchange en transmettant :

l’URL ;
la méthode HTTP (grâce à l’enum HttpMethod) ;
Null en lieu et place d’un objet HttpEntity, ainsi on laisse un comportement par défaut ;
le type retour, ici je suis obligé d’utiliser un objet ParameterizedTypeReference car /employees renvoie un objet Iterable<Employee>. Mais si l’endpoint renvoie un objet simple, alors il suffira d’indiquer <Object>.class.
 on récupère notre objet Iterable<Employee> grâce à la méthode getBody() de l’objet Response.